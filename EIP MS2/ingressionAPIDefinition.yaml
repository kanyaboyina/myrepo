openapi: 3.0.0
info:
  title: Ingression Service
  version: 1.0.0
  description: >-
    Provides an on-demand service for receiving event or batch data from any
    data source through any of its interfaces. The ingressed data is first
    recorded in its original format in an immutable object store, then formated
    using standardized schema and finally ingested into the pipeline as a stream
    of records or events for harmonization purposes.
servers:
  - url: 'https://ingression.{eipserver}:{port}/dataReception'
    description: Ingression service endpoint per deployment environment.
    variables:
      eipserver:
        description: >- 
          Assigned at deployment time per the deployed environment.
        default: eipserver.tfs.com
      port:
        description: >-
          Assigned at deployment time per deployment and is unique for
          ingression service.
        default: '8080'
paths:
  '/rawData/{interfaceID}':
    post:
      description: >-
        Receive source specific data from each interface in native format and
        encoding.
      operationId: receiveRawDataByInterface
      parameters:
        - name: interfaceID
          in: path
          description: >-
            identifies the interface of data source uniquely by name and version. Unique identifier representing the interface name and version.
          required: true
          schema:
            type: string
        - name: dataSourceID
          in: query
          description: >-
            Identifies the data source by name and version of the interface. Unique identifier representing the data source name and version.
          required: true
          allowEmptyValue: false
          schema:
            type: string
        - name: timeOfCreationAtSource
          in: query
          description: >-
            Date and time of the data creation at source system identified by data source ID. 
          required: true
          allowEmptyValue: false
          schema:
            type: string
            format: date-time
        - name: timeOfSendAtClient
          in: query
          description: >-
            Date and time the client application is sending the data. The
            date-time format is a per RFC3339.
          required: true
          allowEmptyValue: false
          schema:
            type: string
            format: date-time
        - name: X-TFS-IngressionAPIID
          in: header
          description: >- 
            Uniquely identifies the API implementation of ingression interface by name and version. Unique ID that identifies this API and version.
          required: true
          schema:
            type: string
            default: IngressionAPI-V1.0.0
        - name: X-TFS-APIClientAccessKey
          in: header
          description: >-
             Identifies the applications permitted to interact with ingression service. API access key is issued by the API manager.
          required: true
          schema:
            type: string
        - name: X-TFS-InteractionGroupID
          in: header
          description: >-
            Unique tag generated by the client to identify a set of interactions belonging to same instance of a group for processing the raw data together as a single unit of integrity.
          required: true
          schema:
            type: string
        - name: X-TFS-InteractionID
          in: header
          description: >-
            Unique client tag identifying the current interaction with the ingression service.
          required: true
          schema:
            type: string
            format: UUID
        - name: X-TFS-TransactionID
          in: header
          description: >-
            Transaction identifier previously given by the ingression service.
            This is only needed for a multipart upload when uploading each of
            the parts in a multipart upload. This must be present if the content
            type specifies multipart and is not the first part of the multipart.
          required: false
          schema:
            type: string
            format: UUID
        - name: X-TFS-MultipartNumber
          in: header
          description: >-
            Number Indicates the part of the multipart upload. This must be present if the content type indicates multipart and transaction ID is present.
          required: false
          schema:
            type: number
        - name: X-TFS-MultipartTotal
          in: header
          description: >-
            Specifies the total number of parts in a multipart upload. This
            field is mandatory for multipart uploads.
          required: false
          schema:
            type: number
        - name: X-TFS-CheckSum
          in: header
          description: >-
            Hash datum derived on ingression data. Ingression service needs to verify the
            content against this checksum for integrity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: on sucessfully receiving and verifying the content against checksum.
          headers:
            X-TFS-TransactionID:
              description: >-
                A unique transaction id generated by the ingression service to
                identify the instanstace of this transaction. Client provided
                interactionID is correlated with this transaction ID and the
                client is expected to correlate and log the transaction id. This
                transactionID is also used to co-relate all the parts of a multi
                part ingression and the client is expected to send this in the
                request header to identify the various parts belonging to the
                same file.
              schema:
                type: string
                format: UUID
        '400':
          description: >-
            Bad Request. If the request is malformed or not understood by the
            ingression service.
        '401':
          description: >-
            Unauthorized. If not authorized. It is expected the authorization is
            done by the gateway and any unauthorized requests are not passed to
            the ingression service.
        '404':
          description: Not found. If an unsupported interface id is specified.
        '412':
          description: >-
            Precondition Failed. If multipart upload and the provided
            transaction id does not exist.
      security:
        - ingression_auth:
            - 'write:rawData'
